name: CI

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Ubuntu GCC,   os: ubuntu-latest,  compiler: g++,     arch: "64", flags: ""}
        - { name: Ubuntu Clang, os: ubuntu-latest,  compiler: clang++, arch: "64", flags: ""}
        - { name: Windows 32,   os: windows-latest, compiler: vs2019,  arch: "32", flags: "-A Win32"}
        - { name: Windows 64,   os: windows-latest, compiler: vs2019,  arch: "64", flags: "-A x64"}
        - { name: MacOS,        os: macos-latest,   compiler: clang++, arch: "64", flags: ""}

    name: ${{matrix.platform.name}}
    runs-on: ${{matrix.platform.os}}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Setup Linux compiler
      if: runner.os == 'Linux'
      run: export CXX=${{matrix.platform.compiler}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} ${{matrix.platform.flags}} -DOUP_DO_TEST=1

    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config ${BUILD_TYPE} --parallel 2

    - name: Install
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: cmake --install . --config ${BUILD_TYPE}

    - name: Test
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: ctest

